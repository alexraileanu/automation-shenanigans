input {
  redis {
    host => ["redisurl"]
    data_type => "list"
    key => "filebeat.echo"
    password => ""
  }
}

filter {
  if [type] == "nginx_access" {
    grok {
      patterns_dir => ["/usr/share/logstash/patterns"]
      match => ["message", "%{NGINXACCESS}"]
      remove_field => ["message"]
    }

    geoip {
      source => "clientip"
      target => "geoip"
    }
  }

  if [type] == "ufw" {
    grok {
      match => [ "message", "\[%{DATA}\] \[UFW %{WORD:ufw_action}\] IN=%{DATA:ufw_interface} OUT= MAC=%{DATA:ufw_mac} SRC=%{IP:ufw_src_ip} DST=%{IP:ufw_dest_ip} LEN=%{INT:ufw_pack_len} TOS=%{DATA:ufw_tos_data} PREC=%{DATA:ufw_prec_data} TTL=%{INT:ufw_ttl_data} ID=%{DATA:ufw_id_data} PROTO=%{WORD:ufw_protocol} SPT=%{INT:ufw_src_port} DPT=%{INT:ufw_dst_port} WINDOW=%{DATA:ufw_window_data} RES=%{DATA:ufw_res_data} %{WORD:ufw_packetsynack} URGP=%{DATA:ufw_urgp_data}" ]
      remove_field => [ "message" ]
    }

    geoip {
      source => "ufw_src_ip"
      target => "geoip"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "%{type}_indexer"
  }
}
